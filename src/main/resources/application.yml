caterers:
  kafka:
    consumer-enabled: ${consumer-enabled:true}
spring:
  kafka:
    bootstrap-servers: ${KAFKA_HOST}:9092
    properties:
      sasl:
        mechanism: PLAINTEXT
      security:
        protocol: PLAINTEXT
    consumer:
      bootstrap-servers: ${KAFKA_HOST}:9092
      auto-offset-reset: earliest
      group-id: group-caterers
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 1
      fetch-max-wait: 36000
      enable-auto-commit: false
      client-id: client-consumer-caterers
    producer:
      bootstrap-servers: ${KAFKA_HOST}:9092
      client-id: client-producer-caterers
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      retries: 2
    listener:
      poll-timeout: 1800000
      concurrency: 1
      ack-mode: manual_immediate
  data:
    mongodb:
      authentication-database: admin
      database: caterers
      host: ${SPRING_DATA_MONGODB_HOST}
      password: rootpass
      username: rootuser
      port: 27017

max_page_size: 50
